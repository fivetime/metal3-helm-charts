apiVersion: apps/v1
kind: Deployment
metadata:
  name: ironic
  labels:
    {{- include "metal3.labels" . | nindent 4 }}
spec:
  minReadySeconds: 10
  replicas: 1
  selector:
    matchLabels:
      name: ironic
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: ironic
      {{- if .Values.ironicExtraNetworks }}
      annotations:
        k8s.v1.cni.cncf.io/networks: '{{ .Values.ironicExtraNetworks }}'
      {{- end }}
    spec:
      containers:
      - args:
        - /bin/runironic
        command:
        - /bin/sh
        - -c
        env:
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mariadb-password
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
        {{- if .Values.auth.basicAuthEnabled }}
        - configMapRef:
            name: ironic-htpasswd
        - configMapRef:
            name: ironic-inspector-htpasswd
        {{- end }}
        image: {{ .Values.images.ironic.repository }}:{{ .Values.images.ironic.tag }}
        imagePullPolicy: {{ .Values.images.ironic.pullPolicy }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -sSf http://127.0.0.1:{{ if .Values.auth.tlsEnabled }}6388{{ else }}{{ .Values.services.ironic.ironicAPIPort }}{{ end }}{{ if not .Values.auth.tlsEnabled }} || curl -sSfk https://127.0.0.1:{{ .Values.services.ironic.ironicAPIPort }}{{ end }}
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: ironic
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -sSf http://127.0.0.1:{{ if .Values.auth.tlsEnabled }}6388{{ else }}{{ .Values.services.ironic.ironicAPIPort }}{{ end }}{{ if not .Values.auth.tlsEnabled }} || curl -sSfk https://127.0.0.1:{{ .Values.services.ironic.ironicAPIPort }}{{ end }}
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
        - mountPath: /etc/ironic/ironic.conf.j2
          name: ironic-code-custom
          subPath: ironic.conf.j2
        - mountPath: /etc/ironic-inspector/ironic-inspector.conf.j2
          name: ironic-code-custom
          subPath: ironic-inspector.conf.j2
        {{- if .Values.auth.basicAuthEnabled }}
        - mountPath: "/auth/ironic"
          name: ironic-auth-config
          readOnly: true
        - mountPath: "/auth/ironic-inspector"
          name: ironic-inspector-auth-config
          readOnly: true
        {{- end }}
        {{- if .Values.auth.tlsEnabled }}
        - name: cert-ironic-ca
          mountPath: "/certs/ca/ironic"
          readOnly: true
        - name: cert-ironic-inspector-ca
          mountPath: "/certs/ca/ironic-inspector"
          readOnly: true
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsUser: 997 # ironic
          runAsGroup: 994 # ironic
      - command:
        - /bin/sh
        - /bin/runironic-inspector
        env:
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mariadb-password
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
        {{- if .Values.auth.basicAuthEnabled }}
        - configMapRef:
            name: ironic-htpasswd
        - configMapRef:
            name: ironic-inspector-htpasswd
        {{- end }}
        image: {{ .Values.images.ironic.repository }}:{{ .Values.images.ironic.tag }}
        imagePullPolicy: {{ .Values.images.ironic.pullPolicy }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -sSf http://127.0.0.1:{{ if .Values.auth.tlsEnabled }}5049{{ else }}{{ .Values.services.ironic.ironicInspectorPort }}{{ end }}{{ if not .Values.auth.tlsEnabled }} || curl -sSf -k https://127.0.0.1:{{ .Values.services.ironic.ironicInspectorPort }}{{ end }}
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: ironic-inspector
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -sSf http://127.0.0.1:{{ if .Values.auth.tlsEnabled }}5049{{ else }}{{ .Values.services.ironic.ironicInspectorPort }}{{ end }}{{ if not .Values.auth.tlsEnabled }} || curl -sSf -k https://127.0.0.1:{{ .Values.services.ironic.ironicInspectorPort }}{{ end }}
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /etc/ironic/ironic.conf.j2
          name: ironic-code-custom
          subPath: ironic.conf.j2
        - mountPath: /etc/ironic-inspector/ironic-inspector.conf.j2
          name: ironic-code-custom
          subPath: ironic-inspector.conf.j2
        {{- if .Values.auth.basicAuthEnabled }}
        - name: ironic-auth-config
          mountPath: "/auth/ironic"
          readOnly: true
        - name: ironic-inspector-auth-config
          mountPath: "/auth/ironic-inspector"
          readOnly: true
        {{- end }}
        {{- if .Values.auth.tlsEnabled }}
        - name: cert-ironic-ca
          mountPath: "/certs/ca/ironic"
          readOnly: true
        - name: cert-ironic-inspector-ca
          mountPath: "/certs/ca/ironic-inspector"
          readOnly: true
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsUser: 996 # ironic-inspector
          runAsGroup: 993 # ironicinspector
          seccompProfile:
            type: RuntimeDefault
      - command:
        - /bin/sh
        - /bin/runhttpd
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
        image: {{ .Values.images.ironic.repository }}:{{ .Values.images.ironic.tag }}
        imagePullPolicy: {{ .Values.images.ironic.pullPolicy }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -IsSfk http://127.0.0.1:{{ .Values.services.ironic.ironicHTTPPort }}/images/ironic-python-agent.kernel
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: ironic-httpd
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -IsSfk http://127.0.0.1:{{ .Values.services.ironic.ironicHTTPPort }}/images/ironic-python-agent.kernel
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
        {{- if .Values.auth.tlsEnabled }}
        - name: cert-ironic
          mountPath: "/certs/ironic"
          readOnly: true
        - name: cert-ironic-inspector
          mountPath: "/certs/ironic-inspector"
          readOnly: true
        - name: cert-ironic-ca
          mountPath: "/certs/ca/ironic"
          readOnly: true
        - name: cert-ironic-inspector-ca
          mountPath: "/certs/ca/ironic-inspector"
          readOnly: true
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsUser: 997 # ironic
          runAsGroup: 994 # ironic
          seccompProfile:
            type: RuntimeDefault
      hostNetwork: false
      initContainers:
      - command:
        - /usr/local/bin/get-resource.sh
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
        - configMapRef:
            name: ipa-downloader-configmap
        image: {{ .Values.images.ironicIPADownloader.repository }}:{{ .Values.images.ironicIPADownloader.tag }}
        imagePullPolicy: {{ .Values.images.ironicIPADownloader.pullPolicy }}
        name: ironic-ipa-downloader
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsUser: 997 # ironic
          runAsGroup: 994 # ironic
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: ironic-data-volume
        persistentVolumeClaim:
          claimName: ironic-shared-volume
      - configMap:
          name: ironic-code-custom
        name: ironic-code-custom
      {{- if .Values.auth.basicAuthEnabled }}
      - name: ironic-auth-config
        secret:
          secretName: ironic-auth-config
      - name: ironic-inspector-auth-config
        secret:
          secretName: ironic-inspector-auth-config
      {{- end }}
      {{- if .Values.auth.tlsEnabled }}
      - name: cert-ironic-ca
        secret:
          secretName: ironic-cacert
      - name: cert-ironic-inspector-ca
        secret:
          secretName: ironic-cacert
      - name: cert-ironic
        secret:
          secretName: ironic-cert
      - name: cert-ironic-inspector
        secret:
          secretName: ironic-inspector-cert
      {{- end }}
      securityContext:
        runAsNonRoot: true
        fsGroup: 994
        seccompProfile:
          type: RuntimeDefault
    {{- with .Values.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
