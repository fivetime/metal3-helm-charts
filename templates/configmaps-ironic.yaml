apiVersion: v1
data:
  {{ if .Values.httpProxy }}HTTP_PROXY: {{ .Values.httpProxy }}{{ end }}
  {{ if .Values.httpsProxy }}HTTPS_PROXY: {{ .Values.httpsProxy }}{{ end }}
  {{ if .Values.noProxy }}NO_PROXY: {{ .Values.noProxy }}{{ end }}
  {{ if .Values.ironicIPADownloaderBaseURI }}IPA_BASEURI: {{ .Values.ironicIPADownloaderBaseURI }}{{ end }}
kind: ConfigMap
metadata:
  name: ipa-downloader-configmap
---
apiVersion: v1
data:
  DEPLOY_KERNEL_URL: http://{{ .Values.services.ironic.ironicIP }}:{{ .Values.services.ironic.ironicHTTPPort }}/images/ironic-python-agent.kernel
  DEPLOY_RAMDISK_URL: http://{{ .Values.services.ironic.ironicIP }}:{{ .Values.services.ironic.ironicHTTPPort }}/images/ironic-python-agent.initramfs
  HTTP_PORT: {{ .Values.services.ironic.ironicHTTPPort | quote }}
  IRONIC_BASE_URL: http{{ if .Values.auth.tlsEnabled }}s{{ end }}://{{ .Values.services.ironic.ironicIP }}:{{ .Values.services.ironic.ironicAPIPort }}
  IRONIC_ENDPOINT: http{{ if .Values.auth.tlsEnabled }}s{{ end }}://{{ .Values.services.ironic.ironicIP }}:{{ .Values.services.ironic.ironicAPIPort }}/v1/
  IRONIC_FAST_TRACK: "true"
  IRONIC_INSPECTOR_BASE_URL: http{{ if .Values.auth.tlsEnabled }}s{{ end }}://{{ .Values.services.ironic.ironicIP }}:{{ .Values.services.ironic.ironicInspectorPort }}
  IRONIC_INSPECTOR_ENDPOINT: http{{ if .Values.auth.tlsEnabled }}s{{ end }}://{{ .Values.services.ironic.ironicIP }}:{{ .Values.services.ironic.ironicInspectorPort }}/v1/
  IRONIC_IP: {{ required "services.ironic.ironicIP is required for the metal3 deployment" .Values.services.ironic.ironicIP }}
  IRONIC_KERNEL_PARAMS: console=ttyS0
  IRONIC_URL_HOST: {{ .Values.services.ironic.ironicIP }}
  IRONIC_USE_MARIADB: "true"
  MARIADB_URL_IRONIC: {{ include "metal3.mariadb.primary.fullname" . }}-0.{{ include "metal3.mariadb.primary.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local/ironic
  MARIADB_URL_IRONIC_INSPECTOR: {{ include "metal3.mariadb.primary.fullname" . }}-0.{{ include "metal3.mariadb.primary.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local/ironic_inspector
  RESTART_CONTAINER_CERTIFICATE_UPDATED: "false"
  AUTH_STRATEGY: {{ if .Values.auth.basicAuthEnabled }}"http_basic"{{ else }}"noauth"{{ end }}
  INSPECTOR_AUTH_STRATEGY: {{ if .Values.auth.basicAuthEnabled }}"http_basic"{{ else }}"noauth"{{ end }}
  IPA_EXTRA_HW_COLLECTOR_ENABLED: {{ .Values.ironicIPAExtraHardwareCollectorEnabled | quote }}
  IRONIC_REVERSE_PROXY_SETUP: {{ .Values.auth.tlsEnabled | quote }}
  INSPECTOR_REVERSE_PROXY_SETUP: {{ .Values.auth.tlsEnabled | quote }}
{{- if .Values.ironicPythonAgentDebug.sshKey }}
  IRONIC_RAMDISK_SSH_KEY: {{ .Values.ironicPythonAgentDebug.sshKey | quote }}
{{- end }}
{{- if .Values.ironicPythonAgentDebug.rootPwd }}
  IRONIC_RAMDISK_ROOTPWD: {{ .Values.ironicPythonAgentDebug.rootPwd | quote }}
{{- end }}
kind: ConfigMap
metadata:
  name: ironic-bmo-configmap
---
apiVersion: v1
data:
  ironic-inspector.conf.j2: |
    {{ .Files.Get "ironic-scripts/ironic-inspector.conf.j2" | nindent 4 }}
  ironic.conf.j2: |
    {{ .Files.Get "ironic-scripts/ironic.conf.j2" | nindent 4 }}
kind: ConfigMap
metadata:
  name: ironic-code-custom
{{- if .Values.auth.basicAuthEnabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ironic-htpasswd
data:
  IRONIC_HTPASSWD: {{ htpasswd .Values.auth.ironicUsername .Values.auth.ironicPassword }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ironic-inspector-htpasswd
data:
  INSPECTOR_HTPASSWD: {{ htpasswd .Values.auth.ironicInspectorUsername .Values.auth.ironicInspectorPassword }}
{{- end }}
